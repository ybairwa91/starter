+++++++++++++++++++++mongoDB+++++++++++++++++++++++++++++++++++++++++++++
a database management system
document based
NoSQL dbms



1.show dbs---to show all database available 
test> show dbs
admin           40.00 KiB
blog           192.00 KiB
config          60.00 KiB
forinsert       72.00 KiB
local           96.00 KiB
natours-test    72.00 KiB
natours-test2   40.00 KiB
naturr          16.00 KiB
newdatabase     72.00 KiB
newdb           40.00 KiB
test            40.00 KiB

2.use databaseName--for switch to the databse
test> use test
already on db test

3.Show collections--for checking all collection available on the database
test> show collection
MongoshInvalidInputError: [COMMON-10001] 'collection' is not a valid argument for "show".
//its plural[:))]
test> show collections

4.insertOne({})--Create a new document in collection name test
[db.collectionName.method to perform]
db-usual syntax
post-is collectionName
insertOne is method to perfome
test> db.posts.insertOne({name:'Yogesh'})
{
  acknowledged: true,
  insertedId: ObjectId('6617adc2acbb5885f0430293')
}

5.insertedMany([{},{},{}])-to create many document at the same time
test> db.posts.insertMany([{name:'jenny'},{name:'preet'},{name:"bruce"}])
{
  acknowledged: true,
  insertedIds: {
    '0': ObjectId('6617af06acbb5885f0430294'),
    '1': ObjectId('6617af06acbb5885f0430295'),
    '2': ObjectId('6617af06acbb5885f0430296')
  }
}


6.find()--reading all document in the current collection
test> db.posts.find()
[
  {
    '0': 'p',
    '1': 'o',
    '2': 's',
    '3': 't',
    '4': 's',
    _id: ObjectId('65f025817de35c3a5cc03212')
  },
  { _id: ObjectId('6617ac07acbb5885f0430292'), name: 'Yogesh' },
  { _id: ObjectId('6617adc2acbb5885f0430293'), name: 'Yogesh' },
  { _id: ObjectId('6617af06acbb5885f0430294'), name: 'jenny' },
  { _id: ObjectId('6617af06acbb5885f0430295'), name: 'preet' },
  { _id: ObjectId('6617af06acbb5885f0430296'), name: 'bruce' }
]
test>
